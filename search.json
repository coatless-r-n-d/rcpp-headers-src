[{"path":"https://rd-rcpp.thecoatlessprofessor.com/rcpp-headers-src/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"James Balamuta. Author, maintainer.","code":""},{"path":"https://rd-rcpp.thecoatlessprofessor.com/rcpp-headers-src/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Balamuta J (2024). SrcDir: Embedding Multiple Code Files Src. R package version 0.0.0.9000, https://github.com/coatless-rd-rcpp/rcpp-headers-src, https://rd-rcpp.thecoatlessprofessor.com/rcpp-headers-src/.","code":"@Manual{,   title = {SrcDir: Embedding Multiple Code Files in Src},   author = {James Balamuta},   year = {2024},   note = {R package version 0.0.0.9000, https://github.com/coatless-rd-rcpp/rcpp-headers-src},   url = {https://rd-rcpp.thecoatlessprofessor.com/rcpp-headers-src/}, }"},{"path":"https://rd-rcpp.thecoatlessprofessor.com/rcpp-headers-src/index.html","id":"separating-compiled-code-into-individual-units-with-headers","dir":"","previous_headings":"","what":"Separating Compiled Code into Individual Units with Headers","title":"Embedding Multiple Code Files in Src","text":"SrcDir R package provides example using header files split apart functions separate code files still able use function. essence, project shows go : : organization, see SubdirSrc package example compiling code found src/ subdirectories (e.g. src/, src/B).","code":"src/     |-> large-code-file.cpp src/     |-> combined-routines.cpp     |-> routineA.cpp     |-> routineA.h     |-> routineB.cpp     |-> routineB.h"},{"path":"https://rd-rcpp.thecoatlessprofessor.com/rcpp-headers-src/index.html","id":"usage","dir":"","previous_headings":"Separating Compiled Code into Individual Units with Headers","what":"Usage","title":"Embedding Multiple Code Files in Src","text":"install package, must first compiler system compatible R. help obtaining compiler consult either macOS Windows guides. compiler hand, one can install package GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"r-pkg-examples/rcpp-headers-src\") library(\"SrcDir\")"},{"path":"https://rd-rcpp.thecoatlessprofessor.com/rcpp-headers-src/index.html","id":"implementation-details","dir":"","previous_headings":"Separating Compiled Code into Individual Units with Headers","what":"Implementation Details","title":"Embedding Multiple Code Files in Src","text":"Separating code different files requires use header files (.h). Headers provide way share function definitions preprocessor macros two C++ files (.cpp). Using header inside another file requires use #include preprocessor directive, effectively “copies” contents header file. Take instance routineA.cpp file. Note, two different kinds #include used: <> indicate system header file found system directories supplied -. Rcpp.h system library located outside project space. \"\" means file resides working directory program. details, please see Section 2.1 Include Syntax gcc documentation. accompanying header file routineA.h. header contain function definition calc_A_routine() function declared within file. header contents “copied”, important protect function definitions ensure included . prevent happening, inclusion guard used. checking whether variable defined #ifndef, header file can copied completely skip define portion. short, design pattern can succiently stated : , routines B can included inside third file combined-routines.cpp. inclusion statements :","code":"#include <Rcpp.h> #include \"routineA.h\"  // [[Rcpp::export]] Rcpp::NumericVector calc_A_routine(Rcpp::NumericVector x) {   Rcpp::NumericVector a = x - 4;   return a; } // Defines a header file containing function signatures for functions in src/  // Protect signatures using an inclusion guard. #ifndef routineA_H #define routineA_H  Rcpp::NumericVector calc_A_routine(Rcpp::NumericVector x);  #endif #ifndef myfilename_H #define myfilename_H  // Contents here  #endif #include <Rcpp.h>  // Load directory header files #include \"routineA.h\" #include \"routineB.h\"  // additional code"},{"path":"https://rd-rcpp.thecoatlessprofessor.com/rcpp-headers-src/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Embedding Multiple Code Files in Src","text":"GPL (>= 2)","code":""},{"path":"https://rd-rcpp.thecoatlessprofessor.com/rcpp-headers-src/reference/SrcDir-package.html","id":null,"dir":"Reference","previous_headings":"","what":"SrcDir: Embedding Multiple Code Files in Src — SrcDir-package","title":"SrcDir: Embedding Multiple Code Files in Src — SrcDir-package","text":"Provides implementation showing multiple compiled code files `src` directory can used.","code":""},{"path":[]},{"path":"https://rd-rcpp.thecoatlessprofessor.com/rcpp-headers-src/reference/SrcDir-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"SrcDir: Embedding Multiple Code Files in Src — SrcDir-package","text":"Maintainer: James Balamuta balamut2@illinois.edu","code":""},{"path":"https://rd-rcpp.thecoatlessprofessor.com/rcpp-headers-src/reference/exported_funcs.html","id":null,"dir":"Reference","previous_headings":"","what":"Package functions — calc_modifications","title":"Package functions — calc_modifications","text":"Functions listed derived exported C++ functions. Note functions work even split multiple separate files.","code":""},{"path":"https://rd-rcpp.thecoatlessprofessor.com/rcpp-headers-src/reference/exported_funcs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Package functions — calc_modifications","text":"","code":"calc_modifications(x)  calc_A_routine(x)  calc_B_routine(x)"},{"path":"https://rd-rcpp.thecoatlessprofessor.com/rcpp-headers-src/reference/exported_funcs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Package functions — calc_modifications","text":"x Vector Numeric Values length \\(n\\).","code":""},{"path":"https://rd-rcpp.thecoatlessprofessor.com/rcpp-headers-src/reference/exported_funcs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Package functions — calc_modifications","text":"vector numeric values length \\(n\\).","code":""},{"path":"https://rd-rcpp.thecoatlessprofessor.com/rcpp-headers-src/reference/exported_funcs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Package functions — calc_modifications","text":"","code":"my_vec = c(3.5, 8, -1.5, -2, 0, 42) calc_modifications(my_vec) #> [1]  5 14 -5 -6 -2 82 my_vecA = c(881, 884, 1,2,-4) calc_A_routine(my_vecA) #> [1] 877 880  -3  -2  -8 my_vecB = c(512,32, -1, 1.3, 5.9) calc_B_routine(my_vecB) #> [1] 514.0  34.0   1.0   3.3   7.9"}]
